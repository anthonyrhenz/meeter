version: "3.9"

services:
  db:
    image: pgvector/pgvector:pg16
    container_name: ${COMPOSE_PROJECT_NAME}_postgres
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./postgres/init:/docker-entrypoint-initdb.d:ro
    networks: [meeter]

  redis:
    image: redis:7-alpine
    container_name: ${COMPOSE_PROJECT_NAME}_redis
    ports:
      - "6379:6379"
    networks: [meeter]

  backend:
    build: ./backend
    container_name: ${COMPOSE_PROJECT_NAME}_backend
    env_file: .env
    command: >
      sh -c "
        python manage.py migrate &&
        uvicorn meeter_platform.asgi:application --host 0.0.0.0 --port 8000 --reload
      "
    volumes:
      - ./backend:/app
    environment:
      DATABASE_URL: postgres://${DB_USER}:${DB_PASSWORD}@db:5432/${DB_NAME}
      CELERY_BROKER_URL: ${CELERY_BROKER_URL}
      CELERY_RESULT_BACKEND: ${CELERY_RESULT_BACKEND}
      CHANNELS_REDIS_URL: ${CHANNELS_REDIS_URL}
    depends_on: [db, redis]
    networks: [meeter]

  celeryworker:
    build: ./backend
    container_name: ${COMPOSE_PROJECT_NAME}_celery
    env_file: .env
    command: celery -A celery_config:app worker --loglevel=info --concurrency=${CELERY_WORKER_CONCURRENCY:-2}
    volumes:
      - ./backend:/app
    depends_on: [backend, redis]
    networks: [meeter]

  frontend:
    build:
      context: .
      dockerfile: ./frontend/Dockerfile
      target: development
      args:
        - VITE_API_URL=${VITE_API_URL}
        - VITE_WS_URL=${VITE_WS_URL}
        - VITE_API_SAME_HOST=${VITE_API_SAME_HOST}
    container_name: ${COMPOSE_PROJECT_NAME}_frontend
    env_file: .env
    command: npm run dev -- --host
    volumes:
      - ./frontend:/app
      - /app/node_modules
    networks: [meeter]

  nginx:
    image: nginx:stable-alpine
    container_name: ${COMPOSE_PROJECT_NAME}_nginx
    depends_on: [backend, frontend]
    ports:
      - "${HTTP_PORT:-80}:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/includes:/etc/nginx/includes:ro
      - ./nginx/sites-available/meeter-dev.conf:/etc/nginx/sites-available/meeter.conf:ro
      - frontend_dist:/usr/share/nginx/html
    networks: [meeter]

  llm_proxy:
    image: ghcr.io/berriai/litellm:main-stable
    container_name: ${COMPOSE_PROJECT_NAME}_litellm
    env_file: .env
    command: --config /app/config.yaml --port 4000 --debug
    volumes:
      - ./litellm_config.yaml:/app/config.yaml:ro
    ports:
      - "4000:4000"
    networks: [meeter]

volumes:
  postgres_data:
  frontend_dist:

networks:
  meeter:
    driver: bridge
